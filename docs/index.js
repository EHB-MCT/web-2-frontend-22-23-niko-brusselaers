/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("const isLoggedIn = sessionStorage.getItem('isLoggedIn')\r\n// var URL = 'https://gamepickr-backend.onrender.com'\r\nvar URL = \"http://localhost:3000\"\r\ndocument.getElementById('index').classList.add(\"activeLink\")\r\n\r\n//if user is logged in or not, display a series of buttons for selecting a random game\r\ndisplayMainpageButtons(isLoggedIn)\r\n\r\n\r\n//if user clicks find random game button, function will perform a fetch call to backend to receive data about a random game\r\nconst findRandomBtn = document.getElementById(\"findRandomBtn\")\r\nfindRandomBtn.addEventListener(\"click\", (event) => {\r\n    event.preventDefault()\r\n    fetch(`${URL}/getRandomGame`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            //when data about game has been received update main page to display the randomly selected game\r\n            displayGame(data)\r\n        })\r\n})\r\n\r\nconst findOnPreferenceBtn = document.getElementById(\"findOnPreferenceBtn\")\r\n\r\n\r\n// if user is logged in, create an eventlistener for findFromFavoritesBtn\r\nif (isLoggedIn == \"true\") {\r\n    const findFromFavoritesBtn = document.getElementById(\"findFromFavoritesBtn\")\r\n    // if user clicks on findFromFavoritesBtn, perform a fetch call to get a random game from user favourites\r\n    findFromFavoritesBtn.addEventListener('click', () => {\r\n        let userId = sessionStorage.getItem('id') || localStorage.getItem('id')\r\n        console.log(userId);\r\n        fetch(`${URL}/getGameFromFavorites`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    userId\r\n                })\r\n\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                //when data about game has been received update main page to display the randomly selected game\r\n                displayGame(data)\r\n            })\r\n    })\r\n\r\n}\r\n\r\nfunction displayGame(gameData) {\r\n    // insert randomly selected game inside html element\r\n    let innerHTML = `\r\n            <h1> Random Game </h1> \r\n            <p> We have selected a random game for you. <br>\r\n                 </p>\r\n            <div class=\"gameCard\" id=\"gameCard\">\r\n                <img src=\"${gameData.image}\" alt=\"\">\r\n                <div>\r\n                    <button id=\"dislikeBtn\"> <span class=\"icon-thumbs-down\" id=\"dislikeBtn\"> </span></button>\r\n                    <h3>${gameData.name}</h3> \r\n                    <button id=\"likeBtn\" > <span class = \"icon-heart\" id=\"likeBtn\"> </button>\r\n                    <h4 class=\"gameId\" id=\"gameId\">${gameData.gameId}</h4> \r\n                </div> \r\n            </div> \r\n        `\r\n    document.getElementById('mainContent').innerHTML = innerHTML\r\n    const gameCard = document.querySelector('#gameCard')\r\n    gameCard.addEventListener('click', async (element) => {\r\n        //if clicked element is not gameCard, retrieve userId and gameId\r\n        if (element.target != element.currentTarget) {\r\n            let updateUserPreferences = {\r\n                userId: sessionStorage.getItem('id') || localStorage.getItem('id'),\r\n                gameId: element.currentTarget.querySelector('h4').innerHTML,\r\n                isLiked: null\r\n            }\r\n            // if likedBtn has been clicked set isLiked true else if dislikeBtn has been clicked set it to false\r\n            if (element.target.id == \"likeBtn\") updateUserPreferences.isLiked = true\r\n            else if (element.target.id == \"dislikeBtn\") updateUserPreferences.isLiked = false\r\n            // do a fetch call to update User Game Preference with the like/dislike of the displayed game\r\n            let statusCode\r\n            await fetch(`${URL}/updateUserGamePreference`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    updateUserPreferences\r\n                })\r\n            })\r\n\r\n\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction displayMainpageButtons(isLoggedIn) {\r\n    const mainPageBtnContainer = document.getElementById('mainPageBtnContainer')\r\n    let innerHTML\r\n    // if user is logged in, show all buttons\r\n    if (isLoggedIn == \"true\") {\r\n        innerHTML = `\r\n        <button id=\"findOnPreferenceBtn\"> Find on preference </button> \r\n        <button id=\"findRandomBtn\"> Find random game </button>\r\n        <button id=\"findFromFavoritesBtn\"> Find random game from favorites </button>\r\n        `\r\n    } else {\r\n        // if user is not logged in, findFromFavoritesBtn button is not added\r\n        innerHTML = `\r\n        <button id=\"findOnPreferenceBtn\"> Find on preference </button> \r\n        <button id=\"findRandomBtn\"> Find random game </button>\r\n\r\n        `\r\n    }\r\n    //insert buttons into html element\r\n    mainPageBtnContainer.innerHTML = innerHTML\r\n}\r\n\r\nfunction displayQuestions() {\r\n\r\n}\n\n//# sourceURL=webpack://web-2-frontend-22-23-niko-brusselaers/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;